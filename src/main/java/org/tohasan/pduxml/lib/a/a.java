package org.tohasan.pduxml.lib.a;

import org.tohasan.pduxml.lib.infra.XmlPduException;

import java.util.Enumeration;
import java.util.Hashtable;

public final class a {
    private static Hashtable a = new Hashtable() {
        {
            this.put("_ACSERequirement", new Integer(1));
            this.put("_ACSEServiceProvider", new Integer(2));
            this.put("_ACSEServiceUser", new Integer(3));
            this.put("_AEQualifier", new Integer(4));
            this.put("_APTitle", new Integer(5));
            this.put("_Access", new Integer(6));
            this.put("_AccessRequest", new Integer(7));
            this.put("_AccessRequestAction", new Integer(8));
            this.put("_AccessRequestBody", new Integer(9));
            this.put("_AccessRequestGet", new Integer(10));
            this.put("_AccessRequestGetWithSelection", new Integer(11));
            this.put("_AccessRequestSet", new Integer(12));
            this.put("_AccessRequestSetWithSelection", new Integer(13));
            this.put("_AccessRequestSpecification", new Integer(14));
            this.put("_AccessResponse", new Integer(15));
            this.put("_AccessResponseAction", new Integer(16));
            this.put("_AccessResponseBody", new Integer(17));
            this.put("_AccessResponseGet", new Integer(18));
            this.put("_AccessResponseSet", new Integer(19));
            this.put("_AccessResponseSpecification", new Integer(20));
            this.put("_ActionRequest", new Integer(21));
            this.put("_ActionRequestForNextPBlock", new Integer(22));
            this.put("_ActionRequestNormal", new Integer(23));
            this.put("_ActionRequestWithFirstPBlock", new Integer(24));
            this.put("_ActionRequestWithList", new Integer(25));
            this.put("_ActionRequestWithListAndWithFirstPBlock", new Integer(26));
            this.put("_ActionRequestWithPBlock", new Integer(27));
            this.put("_ActionResponse", new Integer(28));
            this.put("_ActionResponseForNextPBlock", new Integer(29));
            this.put("_ActionResponseNormal", new Integer(30));
            this.put("_ActionResponseWithList", new Integer(31));
            this.put("_ActionResponseWithPBlock", new Integer(32));
            this.put("_ActionResult", new Integer(33));
            this.put("_AgreedKey", new Integer(34));
            this.put("_ApplicationContextName", new Integer(35));
            this.put("_ApplicationReference", new Integer(36));
            this.put("_Array", new Integer(37));
            this.put("_AssociationRequest", new Integer(38));
            this.put("_AssociationResponse", new Integer(39));
            this.put("_AssociationResult", new Integer(40));
            this.put("_AttributeDescriptor", new Integer(41));
            this.put("_AttributeDescriptorWithSelection", new Integer(42));
            this.put("_AuthenticationValue", new Integer(43));
            this.put("_BERCOSEMpdu", new Integer(44));
            this.put("_Bcd", new Integer(45));
            this.put("_BitString", new Integer(46));
            this.put("_BlockControl", new Integer(47));
            this.put("_BlockNumberAccess", new Integer(48));
            this.put("_Boolean", new Integer(49));
            this.put("_COSEMpdu", new Integer(50));
            this.put("_ClassId", new Integer(51));
            this.put("_ConfirmedServiceError", new Integer(52));
            this.put("_Conformance", new Integer(53));
            this.put("_Data", new Integer(54));
            this.put("_DataAccessResult", new Integer(55));
            this.put("_DataBlockGResult", new Integer(56));
            this.put("_DataBlockResult", new Integer(57));
            this.put("_DataBlock_G", new Integer(58));
            this.put("_DataBlock_SA", new Integer(59));
            this.put("_DataNotification", new Integer(60));
            this.put("_Date", new Integer(61));
            this.put("_DateTime", new Integer(62));
            this.put("_Definition", new Integer(63));
            this.put("_DontCare", new Integer(64));
            this.put("_Enum", new Integer(65));
            this.put("_EventNotificationRequest", new Integer(66));
            this.put("_ExceptionResponse", new Integer(67));
            this.put("_ExceptionServiceError", new Integer(68));
            this.put("_ExceptionStateError", new Integer(69));
            this.put("_Float32", new Integer(70));
            this.put("_Float64", new Integer(71));
            this.put("_FloatingPoint", new Integer(72));
            this.put("_GeneralBlockTransfer", new Integer(73));
            this.put("_GeneralCiphering", new Integer(74));
            this.put("_GeneralDedCiphering", new Integer(75));
            this.put("_GeneralGloCiphering", new Integer(76));
            this.put("_GeneralSigning", new Integer(77));
            this.put("_GetDataResult", new Integer(78));
            this.put("_GetRequest", new Integer(79));
            this.put("_GetRequestForNextDatablock", new Integer(80));
            this.put("_GetRequestNormal", new Integer(81));
            this.put("_GetRequestWithList", new Integer(82));
            this.put("_GetResponse", new Integer(83));
            this.put("_GetResponseNormal", new Integer(84));
            this.put("_GetResponseWithDataBlock", new Integer(85));
            this.put("_GetResponseWithList", new Integer(86));
            this.put("_HardwareResource", new Integer(87));
            this.put("_IdentifiedKey", new Integer(88));
            this.put("_ImplementationData", new Integer(89));
            this.put("_InformationReportRequest", new Integer(90));
            this.put("_Initiate", new Integer(91));
            this.put("_InitiateRequest", new Integer(92));
            this.put("_InitiateResponse", new Integer(93));
            this.put("_Integer16", new Integer(94));
            this.put("_Integer32", new Integer(95));
            this.put("_Integer64", new Integer(96));
            this.put("_Integer8", new Integer(97));
            this.put("_InvocationId", new Integer(98));
            this.put("_InvokeIdAndPriority", new Integer(99));
            this.put("_KekId", new Integer(100));
            this.put("_KeyId", new Integer(101));
            this.put("_KeyInfo", new Integer(102));
            this.put("_ListOfAccessRequestSpecification", new Integer(103));
            this.put("_ListOfAccessResponseSpecification", new Integer(104));
            this.put("_ListOfAttributeDescriptorWithSelection", new Integer(105));
            this.put("_ListOfData", new Integer(106));
            this.put("_ListOfDataAccessResult", new Integer(107));
            this.put("_ListOfGetDataResult", new Integer(108));
            this.put("_ListOfMethodDescriptor", new Integer(109));
            this.put("_ListOfSingleActionResponse", new Integer(110));
            this.put("_ListOfVariableAccessSpecifications", new Integer(111));
            this.put("_LoadDataSet", new Integer(112));
            this.put("_LongInvokeIdAndPriority", new Integer(113));
            this.put("_MechanismName", new Integer(114));
            this.put("_MethodDescriptor", new Integer(115));
            this.put("_NotificationBody", new Integer(116));
            this.put("_NullData", new Integer(117));
            this.put("_ObjectAttributeId", new Integer(118));
            this.put("_ObjectInstanceId", new Integer(119));
            this.put("_ObjectMethodId", new Integer(120));
            this.put("_ObjectName", new Integer(121));
            this.put("_OctetString", new Integer(122));
            this.put("_OtherError", new Integer(123));
            this.put("_ParametrisedAccess", new Integer(124));
            this.put("_ProtocolVersion", new Integer(125));
            this.put("_ReadDataBlockAccess", new Integer(126));
            this.put("_ReadRequest", new Integer(127));
            this.put("_ReadResponse", new Integer(128));
            this.put("_ReleaseRequest", new Integer(129));
            this.put("_ReleaseRequestReason", new Integer(130));
            this.put("_ReleaseResponse", new Integer(131));
            this.put("_ReleaseResponseReason", new Integer(132));
            this.put("_ResultSourceDiagnostic", new Integer(133));
            this.put("_SelectiveAccessDescriptor", new Integer(134));
            this.put("_Service", new Integer(135));
            this.put("_ServiceError", new Integer(136));
            this.put("_SetRequest", new Integer(137));
            this.put("_SetRequestNormal", new Integer(138));
            this.put("_SetRequestWithDataBlock", new Integer(139));
            this.put("_SetRequestWithFirstDataBlock", new Integer(140));
            this.put("_SetRequestWithList", new Integer(141));
            this.put("_SetRequestWithListAndWithFirstDatablock", new Integer(142));
            this.put("_SetResponse", new Integer(143));
            this.put("_SetResponseForDataBlock", new Integer(144));
            this.put("_SetResponseForLastDataBlock", new Integer(145));
            this.put("_SetResponseForLastDataBlockWithList", new Integer(146));
            this.put("_SetResponseNormal", new Integer(147));
            this.put("_SetResponseWithList", new Integer(148));
            this.put("_SingleActionResponse", new Integer(149));
            this.put("_SingleReadResponse", new Integer(150));
            this.put("_SingleWriteResponse", new Integer(151));
            this.put("_Structure", new Integer(152));
            this.put("_Task", new Integer(153));
            this.put("_Time", new Integer(154));
            this.put("_UTF8String", new Integer(155));
            this.put("_UnconfirmedWriteRequest", new Integer(156));
            this.put("_Unsigned16", new Integer(157));
            this.put("_Unsigned32", new Integer(158));
            this.put("_Unsigned64", new Integer(159));
            this.put("_Unsigned8", new Integer(160));
            this.put("_VariableAccessSpecification", new Integer(161));
            this.put("_VdeStateError", new Integer(162));
            this.put("_VisibleString", new Integer(163));
            this.put("_WrappedKey", new Integer(164));
            this.put("_WriteDataBlockAccess", new Integer(165));
            this.put("_WriteRequest", new Integer(166));
            this.put("_WriteResponse", new Integer(167));
            this.put("_zDummy", new Integer(168));
            this.put("ACSEServiceProvider", new Integer(169));
            this.put("ACSEServiceUser", new Integer(170));
            this.put("Access", new Integer(171));
            this.put("AccessParameters", new Integer(172));
            this.put("AccessRequest", new Integer(173));
            this.put("AccessRequestAction", new Integer(174));
            this.put("AccessRequestBody", new Integer(175));
            this.put("AccessRequestGet", new Integer(176));
            this.put("AccessRequestGetWithSelection", new Integer(177));
            this.put("AccessRequestListOfData", new Integer(178));
            this.put("AccessRequestSet", new Integer(179));
            this.put("AccessRequestSetWithSelection", new Integer(180));
            this.put("AccessRequestSpecification", new Integer(181));
            this.put("AccessResponse", new Integer(182));
            this.put("AccessResponseAction", new Integer(183));
            this.put("AccessResponseBody", new Integer(184));
            this.put("AccessResponseGet", new Integer(185));
            this.put("AccessResponseListOfData", new Integer(186));
            this.put("AccessResponseSet", new Integer(187));
            this.put("AccessResponseSpecification", new Integer(188));
            this.put("AccessSelection", new Integer(189));
            this.put("AccessSelector", new Integer(190));
            this.put("Action", new Integer(191));
            this.put("ActionRequest", new Integer(192));
            this.put("ActionRequestForNextPBlock", new Integer(193));
            this.put("ActionRequestNormal", new Integer(194));
            this.put("ActionRequestWithFirstPBlock", new Integer(195));
            this.put("ActionRequestWithList", new Integer(196));
            this.put("ActionRequestWithListAndFirstPBlock", new Integer(197));
            this.put("ActionRequestWithPBlock", new Integer(198));
            this.put("ActionResponse", new Integer(199));
            this.put("ActionResponseForNextPBlock", new Integer(200));
            this.put("ActionResponseNormal", new Integer(201));
            this.put("ActionResponseWithList", new Integer(202));
            this.put("ActionResponseWithPBlock", new Integer(203));
            this.put("AgreedKey", new Integer(204));
            this.put("ApplicationContextName", new Integer(205));
            this.put("ApplicationContextUnsupported", new Integer(206));
            this.put("ApplicationReference", new Integer(207));
            this.put("ApplicationReferenceInvalid", new Integer(208));
            this.put("ApplicationUnreachable", new Integer(209));
            this.put("Array", new Integer(210));
            this.put("AssociationRequest", new Integer(211));
            this.put("AssociationResponse", new Integer(212));
            this.put("AssociationResult", new Integer(213));
            this.put("Attribute0Supported", new Integer(214));
            this.put("Attribute0SupportedWithGet", new Integer(215));
            this.put("Attribute0SupportedWithSet", new Integer(216));
            this.put("AttributeDescriptor", new Integer(217));
            this.put("AttributeDescriptorList", new Integer(218));
            this.put("AttributeId", new Integer(219));
            this.put("AttributeValue", new Integer(220));
            this.put("Bcd", new Integer(221));
            this.put("BitString", new Integer(222));
            this.put("BlockControl", new Integer(223));
            this.put("BlockData", new Integer(224));
            this.put("BlockNumber", new Integer(225));
            this.put("BlockNumberAccess", new Integer(226));
            this.put("BlockNumberAck", new Integer(227));
            this.put("BlockTransferWithAction", new Integer(228));
            this.put("BlockTransferWithGet", new Integer(229));
            this.put("BlockTransferWithGetOrRead", new Integer(230));
            this.put("BlockTransferWithSet", new Integer(231));
            this.put("BlockTransferWithSetOrWrite", new Integer(232));
            this.put("Boolean", new Integer(233));
            this.put("CalledAEInvocationId", new Integer(234));
            this.put("CalledAEQualifier", new Integer(235));
            this.put("CalledAPInvocationId", new Integer(236));
            this.put("CalledAPTitle", new Integer(237));
            this.put("CallingAEInvocationId", new Integer(238));
            this.put("CallingAEQualifier", new Integer(239));
            this.put("CallingAPInvocationId", new Integer(240));
            this.put("CallingAPTitle", new Integer(241));
            this.put("CallingAuthenticationValue", new Integer(242));
            this.put("CipheredContent", new Integer(243));
            this.put("CipheredService", new Integer(244));
            this.put("ClassId", new Integer(245));
            this.put("ConfirmedServiceError", new Integer(246));
            this.put("ConformanceBit", new Integer(247));
            this.put("Content", new Integer(248));
            this.put("CurrentTime", new Integer(249));
            this.put("Data", new Integer(250));
            this.put("DataAccessError", new Integer(251));
            this.put("DataAccessResult", new Integer(252));
            this.put("DataBlock", new Integer(253));
            this.put("DataBlockNumberInvalid", new Integer(254));
            this.put("DataBlockResult", new Integer(255));
            this.put("DataBlockUnavailable", new Integer(256));
            this.put("DataNotification", new Integer(257));
            this.put("DataSetNotReady", new Integer(258));
            this.put("DataValue", new Integer(259));
            this.put("DatasetSizeTooLarge", new Integer(260));
            this.put("Date", new Integer(261));
            this.put("DateTime", new Integer(262));
            this.put("DecipheringError", new Integer(263));
            this.put("DedicatedKey", new Integer(264));
            this.put("Definition", new Integer(265));
            this.put("DlmsVersionTooLow", new Integer(266));
            this.put("DontCare", new Integer(267));
            this.put("DoubleLong", new Integer(268));
            this.put("DoubleLongUnsigned", new Integer(269));
            this.put("Enum", new Integer(270));
            this.put("EventNotification", new Integer(271));
            this.put("EventNotificationRequest", new Integer(272));
            this.put("ExceptionResponse", new Integer(273));
            this.put("Float32", new Integer(274));
            this.put("Float64", new Integer(275));
            this.put("FloatingPoint", new Integer(276));
            this.put("GeneralBlockTransfer", new Integer(277));
            this.put("GeneralCiphering", new Integer(278));
            this.put("GeneralDedCiphering", new Integer(279));
            this.put("GeneralGloCiphering", new Integer(280));
            this.put("GeneralProtection", new Integer(281));
            this.put("GeneralSigning", new Integer(282));
            this.put("Get", new Integer(283));
            this.put("GetRequest", new Integer(284));
            this.put("GetRequestForNextDataBlock", new Integer(285));
            this.put("GetRequestNormal", new Integer(286));
            this.put("GetRequestWithList", new Integer(287));
            this.put("GetResponse", new Integer(288));
            this.put("GetResponseNormal", new Integer(289));
            this.put("GetResponseWithDataBlock", new Integer(290));
            this.put("GetResponseWithList", new Integer(291));
            this.put("GlobalBroadcastEncryptionKey", new Integer(292));
            this.put("GlobalUnicastEncryptionKey", new Integer(293));
            this.put("HardwareFault", new Integer(294));
            this.put("HardwareResource", new Integer(295));
            this.put("IdentifiedKey", new Integer(296));
            this.put("Ignore", new Integer(297));
            this.put("ImplementationInformation", new Integer(298));
            this.put("IncompatibleConformance", new Integer(299));
            this.put("InformationReport", new Integer(300));
            this.put("InformationReportRequest", new Integer(301));
            this.put("Initiate", new Integer(302));
            this.put("InitiateRequest", new Integer(303));
            this.put("InitiateResponse", new Integer(304));
            this.put("InstanceId", new Integer(305));
            this.put("Integer", new Integer(306));
            this.put("InterpretationFailure", new Integer(307));
            this.put("InvokeIdAndPriority", new Integer(308));
            this.put("KekId", new Integer(309));
            this.put("KeyCipheredData", new Integer(310));
            this.put("KeyId", new Integer(311));
            this.put("KeyInfo", new Integer(312));
            this.put("KeyParameters", new Integer(313));
            this.put("LastBlock", new Integer(314));
            this.put("ListOfData", new Integer(315));
            this.put("ListOfSingleActionResponse", new Integer(316));
            this.put("ListOfVariableAccessSpecification", new Integer(317));
            this.put("LoadDataSet", new Integer(318));
            this.put("LoadingDataSet", new Integer(319));
            this.put("Long", new Integer(320));
            this.put("Long64", new Integer(321));
            this.put("Long64Unsigned", new Integer(322));
            this.put("LongActionAborted", new Integer(323));
            this.put("LongGetOrReadAborted", new Integer(324));
            this.put("LongInvokeIdAndPriority", new Integer(325));
            this.put("LongSetOrWriteAborted", new Integer(326));
            this.put("LongUnsigned", new Integer(327));
            this.put("MassStorageUnavailable", new Integer(328));
            this.put("MasterKey", new Integer(329));
            this.put("MechanismName", new Integer(330));
            this.put("MemoryUnavailable", new Integer(331));
            this.put("MethodDescriptor", new Integer(332));
            this.put("MethodDescriptorList", new Integer(333));
            this.put("MethodId", new Integer(334));
            this.put("MethodInvocationParameters", new Integer(335));
            this.put("MultipleReferences", new Integer(336));
            this.put("Name", new Integer(337));
            this.put("NegotiatedConformance", new Integer(338));
            this.put("NegotiatedDlmsVersionNumber", new Integer(339));
            this.put("NegotiatedMaxPduSize", new Integer(340));
            this.put("NegotiatedQualityOfService", new Integer(341));
            this.put("NoDlmsContext", new Integer(342));
            this.put("NoLongActionInProgress", new Integer(343));
            this.put("NoLongGetOrReadInProgress", new Integer(344));
            this.put("NoLongSetOrWriteInProgress", new Integer(345));
            this.put("NoRemoteControl", new Integer(346));
            this.put("Normal", new Integer(347));
            this.put("NotAwaitedSegment", new Integer(348));
            this.put("NotFinished", new Integer(349));
            this.put("NotLoadable", new Integer(350));
            this.put("NotificationBody", new Integer(351));
            this.put("NullData", new Integer(352));
            this.put("ObjectAccessInvalid", new Integer(353));
            this.put("ObjectAttributeInconsistent", new Integer(354));
            this.put("ObjectClassInconsistent", new Integer(355));
            this.put("ObjectUnavailable", new Integer(356));
            this.put("ObjectUndefined", new Integer(357));
            this.put("OctetString", new Integer(358));
            this.put("OperationNotPossible", new Integer(359));
            this.put("OriginatorSystemTitle", new Integer(360));
            this.put("Other", new Integer(361));
            this.put("OtherError", new Integer(362));
            this.put("OtherInformation", new Integer(363));
            this.put("OtherReason", new Integer(364));
            this.put("OtherResourceUnavailable", new Integer(365));
            this.put("PBlock", new Integer(366));
            this.put("Parameter", new Integer(367));
            this.put("ParameterisedAccess", new Integer(368));
            this.put("ParametrizedAccess", new Integer(369));
            this.put("PduSize", new Integer(370));
            this.put("PduSizeTooShort", new Integer(371));
            this.put("PrimitiveOutOfSequence", new Integer(372));
            this.put("PriorityMgmtSupported", new Integer(373));
            this.put("ProcessorResourceUnavailable", new Integer(374));
            this.put("ProposedConformance", new Integer(375));
            this.put("ProposedDlmsVersionNumber", new Integer(376));
            this.put("ProposedMaxPduSize", new Integer(377));
            this.put("ProposedQualityOfService", new Integer(378));
            this.put("ProtocolVersion", new Integer(379));
            this.put("ProviderCommunicationError", new Integer(380));
            this.put("Qty", new Integer(381));
            this.put("RawData", new Integer(382));
            this.put("Read", new Integer(383));
            this.put("ReadDataBlockAccess", new Integer(384));
            this.put("ReadRequest", new Integer(385));
            this.put("ReadResponse", new Integer(386));
            this.put("ReadWriteDenied", new Integer(387));
            this.put("Reason", new Integer(388));
            this.put("RecipientSystemTitle", new Integer(389));
            this.put("RefusedByTheVDEHandler", new Integer(390));
            this.put("ReleaseRequest", new Integer(391));
            this.put("ReleaseResponse", new Integer(392));
            this.put("Reserved0", new Integer(393));
            this.put("Reserved6", new Integer(394));
            this.put("Reserved7", new Integer(395));
            this.put("ResponderACSERequirement", new Integer(396));
            this.put("RespondingAEInvocationId", new Integer(397));
            this.put("RespondingAEQualifier", new Integer(398));
            this.put("RespondingAPInvocationId", new Integer(399));
            this.put("RespondingAPTitle", new Integer(400));
            this.put("RespondingAuthenticationValue", new Integer(401));
            this.put("ResponseAllowed", new Integer(402));
            this.put("Result", new Integer(403));
            this.put("ResultSourceDiagnostic", new Integer(404));
            this.put("ReturnParameters", new Integer(405));
            this.put("ScopeOfAccessViolated", new Integer(406));
            this.put("SelectiveAccess", new Integer(407));
            this.put("Selector", new Integer(408));
            this.put("SenderACSERequirements", new Integer(409));
            this.put("Service", new Integer(410));
            this.put("ServiceError", new Integer(411));
            this.put("ServiceNotAllowed", new Integer(412));
            this.put("ServiceNotSupported", new Integer(413));
            this.put("ServiceUnknown", new Integer(414));
            this.put("ServiceUnsupported", new Integer(415));
            this.put("Set", new Integer(416));
            this.put("SetRequest", new Integer(417));
            this.put("SetRequestNormal", new Integer(418));
            this.put("SetRequestWithDataBlock", new Integer(419));
            this.put("SetRequestWithFirstDataBlock", new Integer(420));
            this.put("SetRequestWithList", new Integer(421));
            this.put("SetRequestWithListAndWithFirstDatablock", new Integer(422));
            this.put("SetResponse", new Integer(423));
            this.put("SetResponseForDataBlock", new Integer(424));
            this.put("SetResponseForLastDataBlock", new Integer(425));
            this.put("SetResponseForLastDataBlockWithList", new Integer(426));
            this.put("SetResponseNormal", new Integer(427));
            this.put("SetResponseWithList", new Integer(428));
            this.put("Signature", new Integer(429));
            this.put("StateError", new Integer(430));
            this.put("StatusInoperable", new Integer(431));
            this.put("StatusNochange", new Integer(432));
            this.put("StorageFailure", new Integer(433));
            this.put("Structure", new Integer(434));
            this.put("Success", new Integer(435));
            this.put("SystemTitle", new Integer(436));
            this.put("Task", new Integer(437));
            this.put("TemporaryFailure", new Integer(438));
            this.put("TiRunning", new Integer(439));
            this.put("TiStopped", new Integer(440));
            this.put("TiUnusable", new Integer(441));
            this.put("Time", new Integer(442));
            this.put("TimeElapsed", new Integer(443));
            this.put("TransactionId", new Integer(444));
            this.put("TypeUnmatched", new Integer(445));
            this.put("UTF8String", new Integer(446));
            this.put("UnconfirmedWrite", new Integer(447));
            this.put("UnconfirmedWriteRequest", new Integer(448));
            this.put("Unsigned", new Integer(449));
            this.put("Urgent", new Integer(450));
            this.put("UserDefined", new Integer(451));
            this.put("UserInformation", new Integer(452));
            this.put("VaaName", new Integer(453));
            this.put("Value", new Integer(454));
            this.put("ValueList", new Integer(455));
            this.put("VariableName", new Integer(456));
            this.put("VdeStateError", new Integer(457));
            this.put("VisibleString", new Integer(458));
            this.put("WrappedKey", new Integer(459));
            this.put("Write", new Integer(460));
            this.put("WriteDataBlockAccess", new Integer(461));
            this.put("WriteRequest", new Integer(462));
            this.put("WriteResponse", new Integer(463));
            this.put("ded_ActionRequest", new Integer(464));
            this.put("ded_ActionResponse", new Integer(465));
            this.put("ded_ConfirmedServiceError", new Integer(466));
            this.put("ded_EventNotificationRequest", new Integer(467));
            this.put("ded_GetRequest", new Integer(468));
            this.put("ded_GetResponse", new Integer(469));
            this.put("ded_InformationReportRequest", new Integer(470));
            this.put("ded_InitiateRequest", new Integer(471));
            this.put("ded_InitiateResponse", new Integer(472));
            this.put("ded_ReadRequest", new Integer(473));
            this.put("ded_ReadResponse", new Integer(474));
            this.put("ded_SetRequest", new Integer(475));
            this.put("ded_SetResponse", new Integer(476));
            this.put("ded_UnconfirmedWriteRequest", new Integer(477));
            this.put("ded_WriteRequest", new Integer(478));
            this.put("ded_WriteResponse", new Integer(479));
            this.put("glo_ActionRequest", new Integer(480));
            this.put("glo_ActionResponse", new Integer(481));
            this.put("glo_ConfirmedServiceError", new Integer(482));
            this.put("glo_GetRequest", new Integer(483));
            this.put("glo_GetResponse", new Integer(484));
            this.put("glo_InformationReportRequest", new Integer(485));
            this.put("glo_InitiateRequest", new Integer(486));
            this.put("glo_InitiateResponse", new Integer(487));
            this.put("glo_ReadRequest", new Integer(488));
            this.put("glo_ReadResponse", new Integer(489));
            this.put("glo_SetRequest", new Integer(490));
            this.put("glo_SetResponse", new Integer(491));
            this.put("glo_UnconfirmedWriteRequest", new Integer(492));
            this.put("glo_WriteRequest", new Integer(493));
            this.put("glo_WriteResponse", new Integer(494));
        }
    };

    public static String a(int var0) throws XmlPduException {
        String var1 = null;
        Enumeration var2 = a.keys();

        while (var2.hasMoreElements()) {
            String var3 = (String) var2.nextElement();
            int var4 = ((Integer) a.get(var3)).intValue();
            if (var0 == var4) {
                var1 = var3;
                break;
            }
        }

        if (var1 == null) {
            throw new XmlPduException("xmlIdToStr: unexpected xmlId .concat(Interger.toString(xmlId))");
        } else {
            return var1;
        }
    }

    public static int a(String var0) throws XmlPduException {
        try {
            return ((Integer) a.get(var0.toString())).intValue();
        } catch (NullPointerException var2) {
            throw new XmlPduException("Unknown identifier - ".concat(var0));
        }
    }
}
